<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Windows.Controls.Data.DataForm</name>
    </assembly>
    <members>
        <member name="T:System.Windows.Controls.Common.CommonResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Common.CommonResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Common.CommonResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Common.CommonResources.InvalidPropertyName">
            <summary>
              Looks up a localized string similar to The property name &apos;{0}&apos; is invalid..
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Common.DependencyObjectExtensions">
            <summary>
            Utility class for DependencyObject/DependencyProperty related operations
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Common.TypeHelper">
            <summary>
            Utility class for Type related operations
            </summary>
        </member>
        <member name="M:System.Windows.Controls.Common.TypeHelper.InvokePath(System.Object,System.String)">
            <summary>
            Helper for SortList to handle nested properties (i.e. Address.Street)
            </summary>
            <param name="item">parent object</param>
            <param name="propertyPath">property names path</param>
            <returns>child object</returns>
        </member>
        <member name="M:System.Windows.Controls.Common.TypeHelper.GetPropertyInfo(System.Type,System.String)">
            <summary>
            Returns the PropertyInfo corresponding to the provided propertyPath. The propertyPath can be a dotted
            path where each section is a public property name. Only public instance properties are searched for.
            </summary>
            <param name="type">The root type.</param>
            <param name="propertyPath">The property path.</param>
            <returns>The found PropertyInfo or null otherwise</returns>
        </member>
        <member name="M:System.Windows.Controls.Common.TypeHelper.GetTypeName(System.Type)">
            <summary>
            Returns the friendly name for a type
            </summary>
            <param name="type"></param>
            <returns>Textual representation of the input type</returns>
        </member>
        <member name="M:System.Windows.Controls.Common.TypeHelper.TypeIsPrimitive(System.Type)">
            <summary>
            Returns whether or not the type is a primitive type.
            </summary>
            <param name="type">The type.</param>
            <returns>Whether or not the type is a primitive type.</returns>
        </member>
        <member name="T:System.Windows.Controls.DataForm">
            <summary>
            Presents the specified contents of an Entity for viewing and editing.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataForm.AutoCommitProperty">
            <summary>
            Identifies the AutoCommit dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnAutoCommitPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AutoCommit property changed handler.
            </summary>
            <param name="d">DataForm that changed its AutoCommit value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.AutoEditProperty">
            <summary>
            Identifies the AutoEdit dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnAutoEditPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AutoEdit property changed handler.
            </summary>
            <param name="d">DataForm that changed its AutoEdit value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.AutoGenerateFieldsProperty">
            <summary>
            Identifies the AutoGenerateFields dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnAutoGenerateFieldsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AutoGenerateFields property changed handler.
            </summary>
            <param name="d">DataForm that changed its AutoGenerateFields value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.CancelButtonContentProperty">
            <summary>
            Identifies the CancelButtonContent dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCancelButtonContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CancelButtonContent property changed handler.
            </summary>
            <param name="d">DataForm that changed its CancelButtonContent value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.CanUserAddItemsProperty">
            <summary>
            Identifies the CanUserAddItems dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCanUserAddItemsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CanUserAddItems property changed handler.
            </summary>
            <param name="d">DataForm that changed its CanUserAddItems value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.CanUserDeleteItemsProperty">
            <summary>
            Identifies the CanUserDeleteItems dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCanUserDeleteItemsPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CanUserDeleteItems property changed handler.
            </summary>
            <param name="d">DataForm that changed its CanUserDeleteItems value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.CommandButtonsVisibilityProperty">
            <summary>
            Identifies the CommandButtonsVisibility dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCommandButtonsVisibilityPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CommandButtonsVisibility property changed handler.
            </summary>
            <param name="d">DataForm that changed its CommandButtonsVisibility value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.CommitButtonContentProperty">
            <summary>
            Identifies the CommitButtonContent dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCommitButtonContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CommitButtonContent property changed handler.
            </summary>
            <param name="d">DataForm that changed its CommitButtonContent value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.CurrentIndexProperty">
            <summary>
            Identifies the CurrentIndex dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCurrentIndexPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CurrentIndex property changed handler.
            </summary>
            <param name="d">DataForm that changed its CurrentItem value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.CurrentItemProperty">
            <summary>
            Identifies the CurrentItem dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCurrentItemPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            CurrentItem property changed handler.
            </summary>
            <param name="d">DataForm that changed its CurrentItem value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.DescriptionViewerPositionProperty">
            <summary>
            Identifies the DescriptionViewerPosition dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnDescriptionViewerPositionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DescriptionViewerPosition property changed handler.
            </summary>
            <param name="d">DataForm that changed its DescriptionViewerPosition value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.DescriptionViewerStyleProperty">
            <summary>
            Identifies the DescriptionViewerStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnDescriptionViewerStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DescriptionViewerStyle property changed handler.
            </summary>
            <param name="d">DataForm that changed its DescriptionViewerStyle value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.DisplayTemplateProperty">
            <summary>
            Identifies the DisplayTemplate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnDisplayTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayTemplate property changed handler.
            </summary>
            <param name="d">DataForm that changed its DisplayTemplate value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.EditTemplateProperty">
            <summary>
            Identifies the EditTemplate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnEditTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            EditTemplate property changed handler.
            </summary>
            <param name="d">DataForm that changed its EditTemplate value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.ErrorSummaryStyleProperty">
            <summary>
            Identifies the ErrorSummaryStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnErrorSummaryStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ErrorSummaryStyle property changed handler.
            </summary>
            <param name="d">DataForm that changed its ErrorSummaryStyle value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.FieldLabelPositionProperty">
            <summary>
            Identifies the FieldLabelPosition dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnFieldLabelPositionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FieldLabelPosition property changed handler.
            </summary>
            <param name="d">DataForm that changed its FieldLabelPosition value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.FieldLabelStyleProperty">
            <summary>
            Identifies the FieldLabelStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnFieldLabelStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FieldLabelStyle property changed handler.
            </summary>
            <param name="d">DataForm that changed its FieldLabelStyle value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.HeaderProperty">
            <summary>
            Identifies the Header dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm.HeaderTemplateProperty">
            <summary>
            Identifies the HeaderTemplate dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm.InsertTemplateProperty">
            <summary>
            Identifies the InsertTemplate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnInsertTemplatePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            InsertTemplate property changed handler.
            </summary>
            <param name="d">DataForm that changed its InsertTemplate value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.IsReadOnlyProperty">
            <summary>
            Identifies the IsReadOnly dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnIsReadOnlyPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsReadOnly property changed handler.
            </summary>
            <param name="d">DataForm that changed its IsReadOnly value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnItemsSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemsSource property changed handler.
            </summary>
            <param name="d">DataForm that changed its ItemsSource value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnOrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Orientation property changed handler.
            </summary>
            <param name="d">DataForm that changed its Orientation value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm.WrapAfterProperty">
            <summary>
            Identifies the WrapAfter dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnWrapAfterPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            WrapAfter property changed handler.
            </summary>
            <param name="d">DataForm that changed its WrapAfter value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="F:System.Windows.Controls.DataForm._buttonSeparator">
            <summary>
            Private accessor to ButtonSeparator.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canAddItems">
            <summary>
            Private accessor to CanAddItems.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canBeginEdit">
            <summary>
            Private accessor to CanBeginEdit.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canCancelEdit">
            <summary>
            Private accessor to CanCancelEdit.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._cancelButton">
            <summary>
            Private accessor to CancelButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canDeleteItems">
            <summary>
            Private accessor to CanDeleteItems.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canCommitEdit">
            <summary>
            Private accessor to CanCommitEdit.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canMoveToFirstItem">
            <summary>
            Private accessor to CanMoveToFirstItem.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canMoveToLastItem">
            <summary>
            Private accessor to CanMoveToLastItem.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canMoveToNextItem">
            <summary>
            Private accessor to CanMoveToNextItem.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._canMoveToPreviousItem">
            <summary>
            Private accessor to CanMoveToPreviousItem.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._collectionView">
            <summary>
            Represents the items source as an ICollectionView.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._deleteItemButton">
            <summary>
            Private accessor to DeleteItemButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._editButton">
            <summary>
            Private accessor to EditButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._elementFieldLabelDictionary">
            <summary>
            Dictionary tying elements to their labels.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._elementDescriptionViewerDictionary">
            <summary>
            Dictionary tying elements to their error viewers.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._entityLevelErrors">
            <summary>
            Holds the entity-level validation errors.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._errorSummary">
            <summary>
            Private accessor to ErrorSummary.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._fields">
            <summary>
            Holds the developer-specified collection of fields.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._fieldsPresenter">
            <summary>
            Private accessor to the fields presenter.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._firstItemButton">
            <summary>
            Private accessor to FirstItemButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._ignoreFieldsCollectionChange">
            <summary>
            Holds a value indicating whether or not to ignore a change in the fields
            collection.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._invalidFields">
            <summary>
            Holds the collection of invalid fields.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._invalidElements">
            <summary>
            Holds the collection of invalid template elements.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._isAddingNew">
            <summary>
            Private accessor to a value indicating whether or not the user is appending a new item.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._isEditing">
            <summary>
            Private accessor to a value indicating whether or not the user is editing the current item.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._isEmpty">
            <summary>
            Private accessor to a value indicating whether or not the control is displaying an item.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._isItemChanged">
            <summary>
            Private accessor to a value indicating whether or not the current item has been changed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._isItemValid">
            <summary>
            Private accessor to a value indicating whether or not the current item is valid.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._isUserAbleToAddItemsAfterEdit">
            <summary>
            The value of IsUserAbleToAddItems prior to entering edit mode.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._isUserAbleToDeleteItemsAfterEdit">
            <summary>
            The value of IsUserAbleToDeleteItems prior to entering edit mode.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._lastCurrentPosition">
            <summary>
            Holds the index of the last value of CurrentPosition on the PagedCollectionView.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._lastItem">
            <summary>
            The last value of CurrentItem, for use when auto-committing an edit.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._lastItemButton">
            <summary>
            Private accessor to LastItemButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._lastItemType">
            <summary>
            The last type of CurrentItem, for use when regenerating fields when the
            current item changes.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._newItemButton">
            <summary>
            Private accessor to NewItemButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._nextItemButton">
            <summary>
            Private accessor to NextItemButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._nextTabIndex">
            <summary>
            Holds the next tab index for generated fields.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._originalItemsSource">
            <summary>
            Represents the original items source prior to wrapping.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._previousItemButton">
            <summary>
            Private accessor to PreviousItemButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._rootField">
            <summary>
            The root group field.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._commitButton">
            <summary>
            Private accessor to CommitButton.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataForm._templateBindingExpressions">
            <summary>
            Holds the binding expressions retrieved from the current template.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.#ctor">
            <summary>
            Constructs a new instance of DataForm.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.AddItem">
            <summary>
            Adds a new item.
            </summary>
            <returns>Whether or not a new item was added.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.BeginEdit">
            <summary>
            Begins the editing of the current item.
            </summary>
            <returns>Whether or not editing was begun.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.CancelItemEdit">
            <summary>
            Cancels the editing of the current item.
            </summary>
            <returns>Whether or not the cancellation was successful.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.CommitFieldEdit(System.Windows.Controls.DataFormField)">
            <summary>
            Commits the edit of the property on the current item bound to a field.
            </summary>
            <param name="field">The field.</param>
            <returns>True if the commit succeeds; false otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.CommitItemEdit">
            <summary>
            Commits the edit of the current item and exits editing mode.
            </summary>
            <returns>True if the commit succeeds; false otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.CommitItemEdit(System.Boolean)">
            <summary>
            Commits the edit of the current item.
            </summary>
            <param name="exitEditingMode">Whether or not editing mode should be exited after committing the edit.</param>
            <returns>True if the commit succeeds; false otherwise.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.DeleteItem">
            <summary>
            Deletes the current item.
            </summary>
            <returns>Whether or not the item was deleted.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GetFieldElement(System.Windows.Controls.DataFormField)">
            <summary>
            Gets the field element for a field.
            </summary>
            <param name="field">The field to retrieve the element from.</param>
            <returns>The element from the field.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnApplyTemplate">
            <summary>
            Applies the template for this control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.ValidateItem">
            <summary>
            Validates the current item.
            </summary>
            <returns>Whether or not the current item is valid.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.CancelAppend">
            <summary>
            Cancels the appending of a new item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.CommitAppend">
            <summary>
            Commits the appending of a new item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.ForceEndEdit">
            <summary>
            Forces the ending of the editing of the current item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GeneratePanelUI(System.Windows.Controls.DataFormMode)">
            <summary>
            Generates the UI from the Fields collection.
            </summary>
            <param name="mode">The mode to be used.</param>
            <returns>The generated UI.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GeneratePanelUI(System.Windows.Controls.DataFormMode,System.Collections.Generic.IList{System.Windows.Controls.DataFormField},System.Windows.Controls.Orientation,System.Int32)">
            <summary>
            Fills the items panel with all of the field containers holding the generated items from the fields collection.
            </summary>
            <param name="mode">The mode to be used.</param>
            <param name="fields">The list of fields.</param>
            <param name="orientation">The orientation in which to lay the fields out.</param>
            <param name="wrapAfter">The number of items to wrap after.</param>
            <returns>The generated UI.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GenerateUI">
            <summary>
            Generates the UI for this control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GetNextTabIndex">
            <summary>
            Gets the next tab index for generated controls.
            </summary>
            <returns>The next tab index.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.MoveToFirstItem">
            <summary>
            Goes to the first item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.MoveToLastItem">
            <summary>
            Goes to the last item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.MoveToNextItem">
            <summary>
            Goes to the next item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.MoveToPreviousItem">
            <summary>
            Goes to the previous item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.UpdateButtons">
            <summary>
            Updates the enabled state of the buttons within the DataForm.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.UpdateBindingsOnElement(System.Windows.FrameworkElement)">
            <summary>
            Finds any bindings on an element and updates the ones in which Mode is TwoWay
            to set the two Boolean properties to true and to set UpdateSourceTrigger
            to Explicit.  Used both for TemplateFields and for template mode.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.UpdateButtonsAndStates">
            <summary>
            Updates the enabled state of the buttons and the visual states within the DataForm.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.UpdateElementValidity(System.Windows.FrameworkElement)">
            <summary>
            Updates whether or not the given element is valid.
            </summary>
            <param name="element">The element to update.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.UpdateStates">
            <summary>
            Updates the visual states within the DataForm.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnAddingItem(System.ComponentModel.CancelEventArgs)">
            <summary>
            Fires the AddingItem event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnAutoGeneratedFields(System.EventArgs)">
            <summary>
            Fires the AutoGeneratedFields event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnAutoGeneratingField(System.Windows.Controls.DataFormAutoGeneratingFieldEventArgs)">
            <summary>
            Fires the AutoGeneratingField event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnBeginningEdit(System.ComponentModel.CancelEventArgs)">
            <summary>
            Fires the BeginningEdit event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnContentLoaded(System.Windows.Controls.DataFormContentLoadedEventArgs)">
            <summary>
            Fires the ContentLoaded event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer for this DataForm.
            </summary>
            <returns>The automation peer.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCurrentItemChanged(System.EventArgs)">
            <summary>
            Fires the CurrentItemChanged event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnDeletingItem(System.ComponentModel.CancelEventArgs)">
            <summary>
            Fires the DeletingItem event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnFieldEditEnded(System.Windows.Controls.DataFormFieldEditEndedEventArgs)">
            <summary>
            Fires the FieldEditEnded event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnFieldEditEnding(System.Windows.Controls.DataFormFieldEditEndingEventArgs)">
            <summary>
            Fires the FieldEditEnding event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnItemEditEnded(System.Windows.Controls.DataFormItemEditEndedEventArgs)">
            <summary>
            Fires the ItemEditEnded event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnItemEditEnding(System.Windows.Controls.DataFormItemEditEndingEventArgs)">
            <summary>
            Fires the ItemEditEnding event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnValidatingItem(System.ComponentModel.CancelEventArgs)">
            <summary>
            Fires the ValidatingItem event.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GetDataFormFieldFromType(System.Type)">
            <summary>
            Returns a DataFormField for a type.
            </summary>
            <param name="type">The type for which to generate the DataFormField.</param>
            <returns>The DataFormField.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.IsKeyboardFocusable(System.Windows.FrameworkElement)">
            <summary>
            Returns whether or not a framework element is keyboard focusable.
            </summary>
            <param name="element">The element.</param>
            <returns>Whether or not the element is keyboard focusable.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.PlaceDescriptionInGrid(System.Windows.Controls.DataFormField,System.Windows.FrameworkElement,System.Windows.Controls.DescriptionViewer,System.Windows.Controls.Grid,System.Windows.Controls.Grid)">
            <summary>
            Places the description into the grid.
            </summary>
            <param name="field">The field.</param>
            <param name="element">The element.</param>
            <param name="description">The description.</param>
            <param name="grid">The grid to be used.</param>
            <param name="labelGrid">The grid to be used for the label.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.PlaceLabelInGrid(System.Windows.Controls.DataFormField,System.Windows.Controls.FieldLabel,System.Windows.FrameworkElement,System.Windows.Controls.Grid,System.Windows.Controls.Grid,System.Int32)">
            <summary>
            Places the label into the grid.
            </summary>
            <param name="field">The field.</param>
            <param name="label">The label.</param>
            <param name="element">The element.</param>
            <param name="grid">The grid to be used.</param>
            <param name="labelGrid">The grid to be used for the label.</param>
            <param name="yPosition">The y-position in the grid at which to insert the field.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetFocusToFirstFocusableControl(System.Windows.DependencyObject)">
            <summary>
            Sets focus to the first focusable control (with respect to TabIndex) within the hierarchy of a given dependency object.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SortGeneratedFieldPaths(System.Collections.Generic.IList{System.String},System.Collections.Generic.IDictionary{System.String,System.Int32})">
            <summary>
            Sorts the generated field paths in GenerateFields() according to the order specified
            in the DisplayAttributes.
            </summary>
            <param name="generatedFieldPaths">The generated field paths.</param>
            <param name="orders">The orders.</param>
            <returns>The sorted list of generated field paths.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetAllCanPropertiesAndUpdate(System.Windows.Controls.DataForm,System.Boolean)">
            <summary>
            Calls SetAllCanProperties() and either UpdateStates() or UpdateButtonsAndStates()
            on the given DataForm.
            </summary>
            <param name="dataForm">The DataForm.</param>
            <param name="onlyUpdateStates">Whether to call UpdateStates() or UpdateButtonsAndStates()</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.ClearEntityErrors">
            <summary>
            Clears all EntityErrors before ValidateForm is performed.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.CommitAllFields">
            <summary>
            Commits all the fields.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.EndEdit">
            <summary>
            Moves out of edit mode.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GenerateFields">
            <summary>
            Generates the DataFormFields from the properties with [Bindable(true)] applied to them.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.GenerateField(System.Type,System.String,System.ComponentModel.BindingDirection,System.Windows.Controls.DataFormFieldGroup)">
            <summary>
            Generates a field based on a property type and a property name.
            </summary>
            <param name="propertyType">The type of the property.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="bindingDirection">The binding direction.</param>
            <param name="group">The group to insert the field into (field added to DataForm.Fields if null).</param>
            <returns>A value indicating whether or not the field was generated.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.IsCommandButtonVisibile(System.Windows.Controls.DataFormCommandButtonsVisibility)">
            <summary>
            Returns whether or not the specified type of command button is visible.
            </summary>
            <param name="commandButtonVisibility">The type of command button.</param>
            <returns>Whether or not the type of command button is visible.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCollectionViewCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the situation where the collection changed on the ICollectionView.
            </summary>
            <param name="sender">The ICollectionView.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCollectionViewCurrentChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the situation where the current item changed on the ICollectionView.
            </summary>
            <param name="sender">The ICollectionView.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCollectionViewCurrentChanging(System.Object,System.ComponentModel.CurrentChangingEventArgs)">
            <summary>
            Handles the situation where the current item is changing on the ICollectionView.
            </summary>
            <param name="sender">The ICollectionView.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCurrentItemPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the situation where a property on the current item changes.
            </summary>
            <param name="sender">The current item.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnFieldsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the situation where the fields collection has changed.
            </summary>
            <param name="sender">The fields collection.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnValidationErrorsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the situation where the collection of validation errors changes.
            </summary>
            <param name="sender">The ValidationErrorCollection.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.PlaceElementInGrid(System.Windows.Controls.DataFormField,System.Windows.Controls.FieldLabel,System.Windows.FrameworkElement,System.Windows.Controls.DescriptionViewer,System.Windows.Controls.Grid,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Places the element into the grid.
            </summary>
            <param name="field">The field.</param>
            <param name="label">The label.</param>
            <param name="element">The element.</param>
            <param name="description">The description.</param>
            <param name="grid">The grid to be used.</param>
            <param name="xPosition">The x-position in the grid at which to insert the field.</param>
            <param name="yPosition">The y-position in the grid at which to insert the field.</param>
            <param name="isLastXPosition">Whether or not this is the rightmost x-position.</param>
            <param name="areLeftLabels">Whether or not there exist other fields in this group with labels at the left.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.PlaceFieldInGrid(System.Windows.Controls.DataFormField,System.Windows.Controls.FieldLabel@,System.Windows.FrameworkElement@,System.Windows.Controls.DescriptionViewer@,System.Windows.Controls.Grid,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Windows.Controls.DataFormMode)">
            <summary>
            Places the field into the grid.
            </summary>
            <param name="field">The field.</param>
            <param name="label">The resulting label.</param>
            <param name="element">The resulting element.</param>
            <param name="description">The resulting description.</param>
            <param name="grid">The grid to be used.</param>
            <param name="xPosition">The x-position in the grid at which to insert the field.</param>
            <param name="yPosition">The y-position in the grid at which to insert the field.</param>
            <param name="isLastXPosition">Whether or not this is the rightmost x-position.</param>
            <param name="areLeftLabels">Whether or not there exist other fields in this group with labels at the left.</param>
            <param name="mode">The mode to be used.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.PrepareTemplateContent(System.Windows.FrameworkElement)">
            <summary>
            Prepares and applies the given template content.
            </summary>
            <param name="templateContent">The template content.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.RemoveGeneratedFields">
            <summary>
            Removes fields generated by GeneratedFields().
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.ResetNextTabIndex">
            <summary>
            Resets the next tab index.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetAllCanProperties">
            <summary>
            Sets all of the properties of the form "CanXXXX".
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetButtonSeparatorVisibility">
            <summary>
            Sets the visibility of the button separator.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanAddItems">
            <summary>
            Sets whether or not the user can add a new item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanBeginEdit">
            <summary>
            Sets whether or not the user can begin an edit.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanCancelEdit">
            <summary>
            Sets whether or not the user can cancel an edit.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCancelButtonVisibility">
            <summary>
            Sets the visibility of the cancel button.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanDeleteItems">
            <summary>
            Sets whether or not the user can delete an item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanCommitEdit">
            <summary>
            Sets whether or not the user can commit an edit.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanMoveToFirstItem">
            <summary>
            Sets whether or not the user can move to the first item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanMoveToLastItem">
            <summary>
            Sets whether or not the user can move to the last item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanMoveToNextItem">
            <summary>
            Sets whether or not the user can move to the next item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCanMoveToPreviousItem">
            <summary>
            Sets whether or not the user can move to the previous item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetCommitButtonVisibility">
            <summary>
            Sets the visibility of the commit button.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetDeleteItemButtonVisibility">
            <summary>
            Sets the visibility of the delete item button.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetEditItemButtonVisibility">
            <summary>
            Sets the visibility of the delete item button.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetIsItemValid">
            <summary>
            Sets whether or not the item is valid.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.SetNewItemButtonVisibility">
            <summary>
            Sets the visibility of the new item button.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.UpdateCurrentItem">
            <summary>
            Updates the current item.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnAppendItemButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "append item" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnBeginEditButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "begin edit" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnCancelEditButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "cancel edit" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnDeleteItemButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "delete item" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnEndEditButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "end edit" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnMoveToFirstItemButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "move to first item" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnMoveToLastItemButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "move to last item" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnMoveToPreviousItemButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "move to previous item" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnMoveToNextItemButtonClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the "move to next item" button.
            </summary>
            <param name="sender">The button.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnElementLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where an element has loaded.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnElementLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where an element lost focus.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnRootElementLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where the root element in the fields presenter has loaded.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataForm.OnTextBoxTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Handles the case where a text box's text changed.
            </summary>
            <param name="sender">The element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="E:System.Windows.Controls.DataForm.AddingItem">
            <summary>
            Event handler for when an item is being added.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.AutoGeneratedFields">
            <summary>
            Event handler for when the fields have been auto-generated.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.AutoGeneratingField">
            <summary>
            Event handler for when a field is being auto-generated.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.BeginningEdit">
            <summary>
            Event handler for when an edit is beginning.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.ContentLoaded">
            <summary>
            Event handler for when content is loaded.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.CurrentItemChanged">
            <summary>
            Event handler for when the current item has changed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.DeletingItem">
            <summary>
            Event handler for when an item is being deleted.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.FieldEditEnded">
            <summary>
            Event handler for when a field edit has ended
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.FieldEditEnding">
            <summary>
            Event handler for when a field edit is ending.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.ItemEditEnded">
            <summary>
            Event handler for when an item edit has ended
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.ItemEditEnding">
            <summary>
            Event handler for when an item edit is ending.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataForm.ValidatingItem">
            <summary>
            Event handler for when the item is being validated.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.AutoCommit">
            <summary>
            Gets or sets a value indicating whether or not to auto-commit items when the
            current item is changed while the user is editing an item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.AutoEdit">
            <summary>
            Gets or sets a value indicating whether or not the DataForm should be
            permanently in edit mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.AutoGenerateFields">
            <summary>
            Gets or sets a value indicating whether or not to automatically generate
            the Fields collection.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanBeginEdit">
            <summary>
            Gets a value indicating whether or not an edit can be begun.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanCancelEdit">
            <summary>
            Gets a value indicating whether or not an edit can be canceled.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CancelButtonContent">
            <summary>
            Gets or sets the cancel button content.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanMoveToFirstItem">
            <summary>
            Gets a value indicating whether or not you can to the first item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanMoveToLastItem">
            <summary>
            Gets a value indicating whether or not you can to the last item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanMoveToNextItem">
            <summary>
            Gets a value indicating whether or not you can to the next item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanMoveToPreviousItem">
            <summary>
            Gets a value indicating whether or not you can to the previous item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanUserAddItems">
            <summary>
            Gets or sets a value indicating whether or not users can add a new item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanUserDeleteItems">
            <summary>
            Gets or sets a value indicating whether or not users can delete an item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CommandButtonsVisibility">
            <summary>
            Gets or sets the command buttons visibility.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CommitButtonContent">
            <summary>
            Gets or sets the commit button content.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CurrentIndex">
            <summary>
            Gets or sets the current index.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CurrentItem">
            <summary>
            Gets or sets the current item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.DescriptionViewerPosition">
            <summary>
            Gets or sets the developer-specified location to place descriptions.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.DescriptionViewerStyle">
            <summary>
            Gets or sets the developer-specified style for descriptions.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.DisplayTemplate">
            <summary>
            Gets or sets the item template used when not editing.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.EditTemplate">
            <summary>
            Gets or sets the item template used when editing.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.ErrorSummary">
            <summary>
            Gets the error summary.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.ErrorSummaryStyle">
            <summary>
            Gets or sets the error summary style.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.FieldLabelPosition">
            <summary>
            Gets or sets the developer-specified location to place labels.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.FieldLabelStyle">
            <summary>
            Gets or sets the developer-specified style for labels.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.Fields">
            <summary>
            Gets the field collection.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.Header">
            <summary>
            Gets or sets the content of the header.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.HeaderTemplate">
            <summary>
            Gets or sets the template of the header.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.InsertTemplate">
            <summary>
            Gets or sets the item template used when inserting.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.IsAddingNew">
            <summary>
            Gets a value indicating whether or not the user is appending a new item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.IsEditing">
            <summary>
            Gets a value indicating whether or not the user is editing the current item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.IsEmpty">
            <summary>
            Gets a value indicating whether or not the control is displaying an item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.IsItemChanged">
            <summary>
            Gets a value indicating whether or not the current item has been changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.IsItemValid">
            <summary>
            Gets a value indicating whether or not the current item is valid.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether or not the control is in read-only mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.ItemsCount">
            <summary>
            Gets the number of items in the items source.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.ItemsSource">
            <summary>
            Gets or sets the items source.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.Mode">
            <summary>
            Gets the current mode of the DataForm.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.WrapAfter">
            <summary>
            Gets or sets the number of fields to wrap after.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanCommitEdit">
            <summary>
            Gets a value indicating whether or not an edit can be committed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CurrentItemType">
            <summary>
            Gets the type of the current item.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.Descriptions">
            <summary>
            Gets the descriptions being displayed in the DataForm.  For use only for unit tests.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.EffectiveIsReadOnly">
            <summary>
            Gets a value indicating whether or not the DataForm is effectively read-only,
            taking into account both IsReadOnly and the presence of templates.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.InputControls">
            <summary>
            Gets the input controls being displayed in the DataForm.  For use only for unit tests.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.IsUserAbleToAddItems">
            <summary>
            Gets a value indicating whether or not users are able to add
            a new item.  This takes into account the values both of
            CanUserAddItems and CanAddItems.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.IsUserAbleToDeleteItems">
            <summary>
            Gets a value indicating whether or not users are able to add
            a new item.  This takes into account the values both of
            CanUserDeleteItems and CanDeleteItems.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.Labels">
            <summary>
            Gets the labels being displayed in the DataForm.  For use only for unit tests.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.UIGenerated">
            <summary>
            Gets a value indicating whether or not the UI has been generated.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanAddItems">
            <summary>
            Gets a value indicating whether or not the collection allows the
            addition of items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CanDeleteItems">
            <summary>
            Gets a value indicating whether or not the collection allows the
            deletion of items.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CurrentItemChangeTracking">
            <summary>
            Gets the current item as an IChangeTracking.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.CurrentItemNotifyPropertyChanged">
            <summary>
            Gets the current item as an INotifyPropertyChanged.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.DisplayTemplateContent">
            <summary>
            Gets the generated content from the display template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.EditableCollectionView">
            <summary>
            Gets the entity collection view as an IEditableCollectionView.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.EditableItemsSource">
            <summary>
            Gets the items source as an IEditableCollection.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.EditTemplateContent">
            <summary>
            Gets the generated content from the edit template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataForm.InsertTemplateContent">
            <summary>
            Gets the generated content from the insert template.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormCommandButtonsVisibility">
            <summary>
            Enumeration denoting which of the command buttons should be visible.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormCommandButtonsVisibility.None">
            <summary>
            Represents the case where no buttons are visible.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormCommandButtonsVisibility.Add">
            <summary>
            Represents the case where the add button is visible.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormCommandButtonsVisibility.Delete">
            <summary>
            Represents the case where the delete button is visible.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormCommandButtonsVisibility.Edit">
            <summary>
            Represents the case where the edit button is visible.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormCommandButtonsVisibility.All">
            <summary>
            Represents the case where all buttons is visible.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormDescriptionViewerPosition">
            <summary>
            Enumeration denoting a description viewer position.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormDescriptionViewerPosition.Auto">
            <summary>
            Represents the case where a description position should be
            dependent on its parent (same behavior as BesideContent when there
            is no parent).
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormDescriptionViewerPosition.BesideContent">
            <summary>
            Represents the case where the description should be placed to the
            right of the input control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormDescriptionViewerPosition.BesideLabel">
            <summary>
            Represents the case where the description should be placed to the
            right of the label.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormEditAction">
            <summary>
            Enumeration denoting an action taken to end an edit.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormEditAction.Cancel">
            <summary>
            Represents the case where an edit has been canceled.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormEditAction.Commit">
            <summary>
            Represents the case where an edit has been committed.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormFieldLabelPosition">
            <summary>
            Enumeration denoting a field label position.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormFieldLabelPosition.Auto">
            <summary>
            Represents the case where a field label position should be
            dependent on its parent (same behavior as Left when there
            is no parent).
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormFieldLabelPosition.Left">
            <summary>
            Represents the case where the label should be placed to the
            left of the input control.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormFieldLabelPosition.Top">
            <summary>
            Represents the case where the label should be placed above
            the input control.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormMode">
            <summary>
            Enumeration denoting a DataForm mode.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormMode.Display">
            <summary>
            Represents the case where an object is being displayed.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormMode.Edit">
            <summary>
            Represents the case where an object is being edited.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormMode.Insert">
            <summary>
            Represents the case where an object is being inserted.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormItemEditEndedEventArgs">
            <summary>
            Event args for the ItemEditEnded event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormItemEditEndedEventArgs.#ctor(System.Windows.Controls.DataFormEditAction)">
            <summary>
            Constructs a new instance of DataFormFieldEditEndedEventArgs.
            </summary>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormItemEditEndedEventArgs.EditAction">
            <summary>
            Gets the edit action.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormItemEditEndingEventArgs">
            <summary>
            Event args for the ItemEditEnding event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormItemEditEndingEventArgs.#ctor(System.Windows.Controls.DataFormEditAction)">
            <summary>
            Constructs a new instance of DataFormFieldEditEndingEventArgs.
            </summary>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormItemEditEndingEventArgs.EditAction">
            <summary>
            Gets the edit action.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormContentLoadedEventArgs">
            <summary>
            Event args for the ContentLoaded event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormContentLoadedEventArgs.#ctor(System.Windows.FrameworkElement)">
            <summary>
            Constructs a new instance of DataFormContentLoadedEventArgs.
            </summary>
            <param name="content">The content that was loaded.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormContentLoadedEventArgs.Content">
            <summary>
            Gets or sets the content that was loaded.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormAutoGeneratingFieldEventArgs">
            <summary>
            Event args for the AutoGeneratingField event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormAutoGeneratingFieldEventArgs.#ctor(System.String,System.Type,System.Windows.Controls.DataFormField)">
            <summary>
            Constructs a new instance of DataFormAutoGeneratingFieldEventArgs.
            </summary>
            <param name="propertyName">The name of the property for the field being generated.</param>
            <param name="propertyType">The type of the property for the field being generated.</param>
            <param name="field">The field being generated.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormAutoGeneratingFieldEventArgs.Field">
            <summary>
            Gets or sets the field to be used.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormAutoGeneratingFieldEventArgs.PropertyName">
            <summary>
            Gets the name of the property for which this field is being generated.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormAutoGeneratingFieldEventArgs.PropertyType">
            <summary>
            Gets the type of the property for which this field is being generated.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormFieldEditEndedEventArgs">
            <summary>
            Event args for the FieldEditEnded event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormFieldEditEndedEventArgs.#ctor(System.Windows.Controls.DataFormField,System.Windows.Controls.DataFormEditAction)">
            <summary>
            Constructs a new instance of DataFormFieldEditEndedEventArgs.
            </summary>
            <param name="field">The field whose edit is ending.</param>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormFieldEditEndedEventArgs.Field">
            <summary>
            Gets the field to be used.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormFieldEditEndedEventArgs.EditAction">
            <summary>
            Gets the edit action.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormFieldEditEndingEventArgs">
            <summary>
            Event args for the FieldEditEnding event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormFieldEditEndingEventArgs.#ctor(System.Windows.Controls.DataFormField,System.Windows.FrameworkElement,System.Windows.Controls.DataFormEditAction)">
            <summary>
            Constructs a new instance of DataFormFieldEditEndingEventArgs.
            </summary>
            <param name="field">The field whose edit is ending.</param>
            <param name="editingElement">The element within the field.</param>
            <param name="editAction">The edit action.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormFieldEditEndingEventArgs.Field">
            <summary>
            Gets the field to be used.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormFieldEditEndingEventArgs.EditAction">
            <summary>
            Gets the edit action.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormFieldEditEndingEventArgs.EditingElement">
            <summary>
            Gets the element within the field.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormBoundField">
            <summary>
            Base class of bound DataForm fields.  Specifies that the field will
            make use of a Binding property.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataFormLabeledField">
            <summary>
            Base class of labeled DataForm fields.  Specifies that the field will
            have a label.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.DataFormField">
            <summary>
            Base class of DataForm fields.  Generates the controls and labels that will be inserted
            into the control DataFormFieldContainer.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormField.IsEditModeReadOnlyProperty">
            <summary>
            Identifies the IsEditModeReadOnly dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormField.IsReadOnlyProperty">
            <summary>
            Identifies the IsReadOnly dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormField._isDataFormCurrentItemNull">
            <summary>
            Private accessor to IsDataFormCurrentItemNull.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormField._owningForm">
            <summary>
            Private accessor to OwningForm.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.#ctor">
            <summary>
            Constructs a new instance of DataFormField.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.GenerateElementInternal">
            <summary>
            Generates the display input control and gives it a name.
            </summary>
            <returns>The display input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.GenerateEditingElementInternal">
            <summary>
            Generates the edit input control and gives it a name.
            </summary>
            <returns>The edit input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.GenerateInsertElementInternal">
            <summary>
            Generates the insert input control and gives it a name.
            </summary>
            <returns>The insert input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.OnIsDataFormCurrentItemNullChanged(System.EventArgs)">
            <summary>
            Fires the event IsDataFormCurrentItemNullChanged.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.OnOwningFormChanged(System.EventArgs)">
            <summary>
            Fires the event OwningFormChanged.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.CommitEdit">
            <summary>
            Commits this field's edit.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.GenerateElement">
            <summary>
            Generates the display input control.
            </summary>
            <returns>The display input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.GenerateEditingElement(System.Boolean)">
            <summary>
            Generates the edit input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The edit input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.GenerateInsertElement(System.Boolean)">
            <summary>
            Generates the insert input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The insert input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.PrepareFieldForEdit(System.Windows.FrameworkElement)">
            <summary>
            Prepares a field for editing.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.OnIsEditModeReadOnlyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsEditModeReadOnly property changed handler.
            </summary>
            <param name="d">DataFormField that changed its IsEditModeReadOnly value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.OnIsReadOnlyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsReadOnly property changed handler.
            </summary>
            <param name="d">DataFormField that changed its IsReadOnly value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.OnElementGotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where the editing element got focus.
            </summary>
            <param name="sender">The editing element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormField.OnElementLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where the editing element lost focus.
            </summary>
            <param name="sender">The editing element.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="E:System.Windows.Controls.DataFormField.OwningFormChanged">
            <summary>
            Flags the fact that the owning form has changed.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataFormField.IsDataFormCurrentItemNullChanged">
            <summary>
            Flags the fact that the state of the DataForm's current item being null changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormField.IsAutoGenerated">
            <summary>
            Gets a value indicating whether or not this field has been auto-generated.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormField.IsEditModeReadOnly">
            <summary>
            Gets or sets a value indicating whether or not the input control should be
            read-only in edit mode.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormField.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether or not the input control should be
            read-only.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormField.IsValid">
            <summary>
            Gets a value indicating whether or not the input control is valid.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormField.BindingExpressions">
            <summary>
            Gets the binding expressions associated with this field.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormField.EffectiveIsEditModeReadOnly">
            <summary>
            Gets or sets a value indicating whether or not the input control should be
            read-only in edit mode, taking into account both IsReadOnly and anything else a child
            class may provide.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormField.EffectiveIsReadOnly">
            <summary>
            Gets or sets a value indicating whether or not the input control should be
            read-only, taking into account both IsReadOnly and anything else a child
            class may provide.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormField.Element">
            <summary>
            Gets or sets the element generated from GenerateElement() or GenerateEditingElement().
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormField.IsDataFormCurrentItemNull">
            <summary>
            Gets or sets a value indicating whether or not the current item on the DataForm
            is null.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormField.OwningForm">
            <summary>
            Gets the DataForm hosting this field.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormField.ShouldGenerateNewElement">
            <summary>
            Gets or sets a value indicating whether or not the mode has changed
            since the last time an element was generated.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormField.Mode">
            <summary>
            Gets or sets the current mode for this field.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormLabeledField.DescriptionViewerPositionProperty">
            <summary>
            Identifies the DescriptionViewerPosition dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormLabeledField.DescriptionViewerStyleProperty">
            <summary>
            Identifies the DescriptionViewerStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormLabeledField.FieldLabelContentProperty">
            <summary>
            Identifies the Label dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormLabeledField.FieldLabelPositionProperty">
            <summary>
            Identifies the FieldLabelPosition dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormLabeledField.FieldLabelStyleProperty">
            <summary>
            Identifies the FieldLabelStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormLabeledField._description">
            <summary>
            Description generated from GenerateDescription().
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormLabeledField._label">
            <summary>
            Label generated from GenerateLabel().
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormLabeledField._parentDescriptionViewerPosition">
            <summary>
            Private accessor to the parent description position.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormLabeledField._parentFieldLabelPosition">
            <summary>
            Private accessor to the parent label position.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormLabeledField.#ctor">
            <summary>
            Constructs a new DataFormLabeledField.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormLabeledField.GenerateDescriptionInternal">
            <summary>
            Generates the description.
            </summary>
            <returns>The description.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormLabeledField.GenerateLabelInternal">
            <summary>
            Generates the label.
            </summary>
            <returns>The label.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormLabeledField.GenerateDescription">
            <summary>
            Generates the description.
            </summary>
            <returns>The description.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormLabeledField.GenerateLabel">
            <summary>
            Generates the label.
            </summary>
            <returns>The label.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormLabeledField.OnDescriptionViewerPositionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DescriptionViewerPosition property changed handler.
            </summary>
            <param name="d">DataFormLabeledField that changed its DescriptionViewerPosition value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormLabeledField.OnDescriptionViewerStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DescriptionViewerStyle property changed handler.
            </summary>
            <param name="d">DataFormLabeledField that changed its DescriptionViewerStyle value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormLabeledField.OnFieldLabelContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FieldLabelContent property changed handler.
            </summary>
            <param name="d">DataFormLabeledField that changed its FieldLabelContent value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormLabeledField.OnFieldLabelPositionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FieldLabelPosition property changed handler.
            </summary>
            <param name="d">DataFormLabeledField that changed its FieldLabelPosition value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormLabeledField.OnFieldLabelStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            FieldLabelStyle property changed handler.
            </summary>
            <param name="d">DataFormLabeledField that changed its FieldLabelStyle value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormLabeledField.SetLabelContent">
            <summary>
            Sets the label content.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormLabeledField.DescriptionViewerPosition">
            <summary>
            Gets or sets the desired position of the description viewer.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormLabeledField.DescriptionViewerStyle">
            <summary>
            Gets or sets the style of the description viewer.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormLabeledField.FieldLabelContent">
            <summary>
            Gets or sets the content of the label.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormLabeledField.FieldLabelPosition">
            <summary>
            Gets or sets the desired position of the label.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormLabeledField.FieldLabelStyle">
            <summary>
            Gets or sets the style of the label.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormLabeledField.EffectiveDescriptionViewerPosition">
            <summary>
            Gets the effective field label position, which is equal to FieldLabelPosition if it's
            not equal to Default, or ParentFieldLabelPosition if it is.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormLabeledField.ParentDescriptionViewerPosition">
            <summary>
            Gets or sets the parent field label position for this field.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormLabeledField.EffectiveFieldLabelPosition">
            <summary>
            Gets the effective field label position, which is equal to FieldLabelPosition if it's
            not equal to Default, or ParentFieldLabelPosition if it is.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormLabeledField.ParentFieldLabelPosition">
            <summary>
            Gets or sets the parent field label position for this field.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormBoundField.BindingProperty">
            <summary>
            Identifies the Binding dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormBoundField.ElementStyleProperty">
            <summary>
            Identifies the ElementStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormBoundField.EditingElementStyleProperty">
            <summary>
            Identifies the EditingElementStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormBoundField.InsertElementStyleProperty">
            <summary>
            Identifies the InsertElementStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormBoundField.OnBindingPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Binding property changed handler.
            </summary>
            <param name="d">DataFormBoundField that changed its Binding value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormBoundField.OnElementStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ElementStyle property changed handler.
            </summary>
            <param name="d">DataFormBoundField that changed its ElementStyle value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormBoundField.OnEditingElementStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            EditingElementStyle property changed handler.
            </summary>
            <param name="d">DataFormBoundField that changed its EditingElementStyle value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormBoundField.OnInsertElementStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            InsertElementStyle property changed handler.
            </summary>
            <param name="d">DataFormBoundField that changed its InsertElementStyle value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormBoundField.Binding">
            <summary>
            Gets or sets the binding to be given to the input control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormBoundField.ElementStyle">
            <summary>
            Gets or sets the style to be given to the display input control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormBoundField.EditingElementStyle">
            <summary>
            Gets or sets the style to be given to the edit input control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormBoundField.InsertElementStyle">
            <summary>
            Gets or sets the style to be given to the insert input control.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormBoundField.EffectiveIsEditModeReadOnly">
            <summary>
            Gets or sets a value indicating whether or not the input control should be
            read-only in edit mode, taking into account both IsReadOnly and
            IsBoundPropertyReadOnly.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormBoundField.EffectiveIsReadOnly">
            <summary>
            Gets or sets a value indicating whether or not the input control should be
            read-only, taking into account both IsReadOnly and IsBoundPropertyReadOnly.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormBoundField.IsBoundPropertyReadOnly">
            <summary>
            Gets or sets a value indicating whether or not the bound property (if one exists) is read-only.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormCheckBoxField">
            <summary>
            Check box field for the DataForm.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormCheckBoxField.IsThreeStateProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormCheckBoxField.GenerateElement">
            <summary>
            Generates the display input control.
            </summary>
            <returns>The display input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormCheckBoxField.GenerateEditingElement(System.Boolean)">
            <summary>
            Generates the edit input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The edit input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormCheckBoxField.GenerateInsertElement(System.Boolean)">
            <summary>
            Generates the insert input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The insert input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormCheckBoxField.GenerateCheckBox(System.Boolean)">
            <summary>
            Generates a check box.
            </summary>
            <param name="isReadOnly">Whether or not the check box should be read-only.</param>
            <returns>The check box.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormCheckBoxField.OnCheckBoxClicked(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where the check box was clicked.
            </summary>
            <param name="sender">The check box.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormCheckBoxField.IsThreeState">
            <summary>
            Gets or sets a value indicating whether or not this check box
            should have three states.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormComboBoxField">
            <summary>
            Combo box field for the DataForm.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormComboBoxField.DisplayMemberPathProperty">
            <summary>
            Identifies the DisplayMemberPath dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormComboBoxField.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormComboBoxField.SelectedIndexBindingProperty">
            <summary>
            Identifies the SelectedIndexBinding dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormComboBoxField.GenerateElement">
            <summary>
            Generates the display input control.
            </summary>
            <returns>The display input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormComboBoxField.GenerateEditingElement(System.Boolean)">
            <summary>
            Generates the edit input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The edit input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormComboBoxField.GenerateInsertElement(System.Boolean)">
            <summary>
            Generates the insert input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The insert input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormComboBoxField.OnDisplayMemberPathPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayMemberPath property changed handler.
            </summary>
            <param name="d">DataFormComboBoxField that changed its DisplayMemberPath value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormComboBoxField.OnItemsSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            ItemsSource property changed handler.
            </summary>
            <param name="d">DataFormComboBoxField that changed its ItemsSource value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormComboBoxField.OnSelectedIndexBindingPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedIndexBinding property changed handler.
            </summary>
            <param name="d">DataFormComboBoxField that changed its SelectedIndexBinding value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormComboBoxField.GenerateComboBox(System.Boolean)">
            <summary>
            Generates a combo box.
            </summary>
            <param name="isReadOnly">Whether or not the combo box should be read-only.</param>
            <returns>The combo box.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormComboBoxField.OnComboBoxDropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Handles the case where the combo box's drop-down menu was closed.
            </summary>
            <param name="sender">The combo box.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormComboBoxField.DisplayMemberPath">
            <summary>
            Gets or sets the display member path for the combo box.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormComboBoxField.ItemsSource">
            <summary>
            Gets or sets the items source for the combo box.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormComboBoxField.SelectedIndexBinding">
            <summary>
            Gets or sets the selected index binding for the combo box.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormDateField">
            <summary>
            Date field for the DataForm.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormDateField.BlackoutDatesProperty">
            <summary>
            Identifies the BlackoutDates dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormDateField.DisplayDateEndProperty">
            <summary>
            Identifies the DisplayDateEnd dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormDateField.DisplayDateStartProperty">
            <summary>
            Identifies the DisplayDateStart dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormDateField.SelectedDateFormatProperty">
            <summary>
            Identifies the SelectedDateFormat dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormDateField.#ctor">
            <summary>
            Constructs a new DataFormDateField.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormDateField.GenerateElement">
            <summary>
            Generates the display input control.
            </summary>
            <returns>The display input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormDateField.GenerateEditingElement(System.Boolean)">
            <summary>
            Generates the edit input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The edit input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormDateField.GenerateInsertElement(System.Boolean)">
            <summary>
            Generates the insert input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>THe insert input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormDateField.OnBlackoutDatesPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            BlackoutDates property changed handler.
            </summary>
            <param name="d">DataFormDateField that changed its BlackoutDates value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormDateField.OnDisplayDateEndPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateEnd property changed handler.
            </summary>
            <param name="d">DataFormDateField that changed its BlackoutDates value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormDateField.OnDisplayDateStartPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayDateStart property changed handler.
            </summary>
            <param name="d">DataFormDateField that changed its DisplayDateStart value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormDateField.OnSelectedDateFormatPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SelectedDateFormat property changed handler.
            </summary>
            <param name="d">DataFormDateField that changed its SelectedDateFormat value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormDateField.GenerateDatePicker(System.Boolean)">
            <summary>
            Generates a date picker.
            </summary>
            <param name="isReadOnly">Whether or not the date picker should be read-only.</param>
            <returns>The date picker.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormDateField.OnDatePickerCalendarClosed(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the case where the date picker's calendar was closed.
            </summary>
            <param name="sender">The date picker.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormDateField.BlackoutDates">
            <summary>
            Gets or sets the collection of blackout dates.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormDateField.DisplayDateEnd">
            <summary>
            Gets or sets the end display date.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormDateField.DisplayDateStart">
            <summary>
            Gets or sets the start display date.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormDateField.SelectedDateFormat">
            <summary>
            Gets or sets the selected date format.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormFieldGroup">
            <summary>
            Group field for the DataForm.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormFieldGroup.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormFieldGroup.WrapAfterProperty">
            <summary>
            Identifies the WrapAfter dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormFieldGroup._fields">
            <summary>
            Private accessor for Fields.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormFieldGroup.#ctor">
            <summary>
            Constructs a new instance of DataFormFieldGroup.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormFieldGroup.OnOwningFormChanged(System.EventArgs)">
            <summary>
            Handles the situation where a field's hosted state has changed.
            </summary>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormFieldGroup.OnIsDataFormCurrentItemNullChanged(System.EventArgs)">
            <summary>
            Handles the situation where the status of the DataForm's current item
            has changed.
            </summary>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormFieldGroup.GenerateElement">
            <summary>
            Generates the UI for the child fields.
            </summary>
            <returns>The UI for the child fields.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormFieldGroup.GenerateEditingElement(System.Boolean)">
            <summary>
            Generates the UI for the child fields.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The UI for the child fields.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormFieldGroup.GenerateInsertElement(System.Boolean)">
            <summary>
            Generates the UI for the child fields.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The UI for the child fields.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormFieldGroup.OnOrientationPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Orientation property changed handler.
            </summary>
            <param name="d">DataFormFieldGroup that changed its Orientation value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormFieldGroup.OnWrapAfterPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            WrapAfter property changed handler.
            </summary>
            <param name="d">DataFormFieldGroup that changed its WrapAfter value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormFieldGroup.GenerateUI">
            <summary>
            Generates the UI for the child fields.
            </summary>
            <returns>The UI for the child fields.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormFieldGroup.AttachField(System.Windows.Controls.DataFormField)">
            <summary>
            Attaches a field to this field group.
            </summary>
            <param name="field">The field to attach.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormFieldGroup.DetachField(System.Windows.Controls.DataFormField)">
            <summary>
            Detaches a field from this field group.
            </summary>
            <param name="field">The field to detach.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormFieldGroup.OnFieldsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles the case where the fields collection has changed.
            </summary>
            <param name="sender">The fields collection.</param>
            <param name="e">The event args</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormFieldGroup.Fields">
            <summary>
            Gets the collection of child fields for this group field.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormFieldGroup.Orientation">
            <summary>
            Gets or sets the desired orientation of this group of fields.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormFieldGroup.WrapAfter">
            <summary>
            Gets or sets how many items to wrap after.  A value of 0 implies no wrapping.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormHeader">
            <summary>
            Header for the DataForm.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormHeader.ContentProperty">
            <summary>
            Identifies the Content dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormHeader.GenerateElement">
            <summary>
            Generates the display input control.
            </summary>
            <returns>The display input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormHeader.GenerateEditingElement(System.Boolean)">
            <summary>
            Generates the edit input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The edit input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormHeader.GenerateInsertElement(System.Boolean)">
            <summary>
            Generates the insert input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The insert input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormHeader.OnContentPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Content property changed handler.
            </summary>
            <param name="d">DataFormHeader that changed its Content value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormHeader.GenerateContentPresenter">
            <summary>
            Generates a content presenter.
            </summary>
            <returns>The content presenter.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataFormHeader.Content">
            <summary>
            Gets or sets the content of the header.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormSeparator">
            <summary>
            Separator for the DataForm.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormSeparator.LineStyleProperty">
            <summary>
            Identifies the LineStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormSeparator.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormSeparator.StrokeDashArrayProperty">
            <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormSeparator.StrokeDashOffsetProperty">
            <summary>
            Identifies the StrokeDashOffset dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormSeparator.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormSeparator._line">
            <summary>
            The line that was created.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormSeparator._linePresenter">
            <summary>
            The presenter for the line.  Used to determine how large
            to make the line.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormSeparator.#ctor">
            <summary>
            Constructs a new DataFormSeparator.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormSeparator.GenerateElement">
            <summary>
            Generates the display input control.
            </summary>
            <returns>The display input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormSeparator.GenerateEditingElement(System.Boolean)">
            <summary>
            Generates the edit input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The edit input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormSeparator.GenerateInsertElement(System.Boolean)">
            <summary>
            Generates the insert input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The insert input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormSeparator.OnLineStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            LineStyle property changed handler.
            </summary>
            <param name="d">DataFormSeparator that changed its LineStyle value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormSeparator.OnStrokePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Stroke property changed handler.
            </summary>
            <param name="d">DataFormSeparator that changed its Stroke value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormSeparator.OnStrokeDashArrayPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StrokeDashArray property changed handler.
            </summary>
            <param name="d">DataFormSeparator that changed its StrokeDashArray value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormSeparator.OnStrokeDashOffsetPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StrokeDashOffset property changed handler.
            </summary>
            <param name="d">DataFormSeparator that changed its StrokeDashOffset value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormSeparator.OnStrokeThicknessPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            StrokeThickness property changed handler.
            </summary>
            <param name="d">DataFormSeparator that changed its StrokeThickness value.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataFormSeparator.GenerateSeparator">
            <summary>
            Generates the line to be used as a separator.
            </summary>
            <returns>The generated line.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormSeparator.OnPresenterSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Updates the size of the line when the size of the presenter changes.
            </summary>
            <param name="sender">The presenter.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="P:System.Windows.Controls.DataFormSeparator.LineStyle">
            <summary>
            Gets or sets the line style to use for this separator.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormSeparator.Stroke">
            <summary>
            Gets or sets the stroke to use for this separator.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormSeparator.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array to use for this separator.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormSeparator.StrokeDashOffset">
            <summary>
            Gets or sets the stroke dash offset to use for this separator.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormSeparator.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness to use for this separator.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormTemplateField">
            <summary>
            Template field for the DataForm.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataFormTemplateField.DisplayTemplateProperty">
            <summary>
            Identifies the DisplayTemplate dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormTemplateField.EditTemplateProperty">
            <summary>
            Identifies the EditTemplate dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataFormTemplateField.InsertTemplateProperty">
            <summary>
            Identifies the InsertTemplate dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataFormTemplateField.GenerateElement">
            <summary>
            Generates the display input control.
            </summary>
            <returns>The display input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormTemplateField.GenerateEditingElement(System.Boolean)">
            <summary>
            Generates the edit input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The edit input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormTemplateField.GenerateInsertElement(System.Boolean)">
            <summary>
            Generates the insert input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The insert input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormTemplateField.GenerateTemplateContent(System.Windows.Controls.DataFormMode)">
            <summary>
            Generates the template content for a given mode.
            </summary>
            <param name="mode">The mode to be used.</param>
            <returns>The template content</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormTemplateField.GetTemplateContent(System.Windows.Controls.DataFormMode)">
            <summary>
            Applies the template fallbacks.
            </summary>
            <param name="mode">The mode to be used.</param>
            <returns>The template content for the mode or the appropriate fallback template.</returns>
        </member>
        <member name="P:System.Windows.Controls.DataFormTemplateField.DisplayTemplate">
            <summary>
            Gets or sets the display template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormTemplateField.EditTemplate">
            <summary>
            Gets or sets the edit template.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataFormTemplateField.InsertTemplate">
            <summary>
            Gets or sets the insert template.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DataFormTextField">
            <summary>
            Text field for the DataForm.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormTextField.GenerateElement">
            <summary>
            Generates the display input control.
            </summary>
            <returns>The display input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormTextField.GenerateEditingElement(System.Boolean)">
            <summary>
            Generates the edit input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The edit input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormTextField.GenerateInsertElement(System.Boolean)">
            <summary>
            Generates the insert input control.
            </summary>
            <param name="isReadOnly">Whether or not the element should be read-only.</param>
            <returns>The insert input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormTextField.GenerateTextBox(System.Boolean)">
            <summary>
            Generates a text box.
            </summary>
            <param name="isReadOnly">Whether or not the text box should be read-only.</param>
            <returns>The text box.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormTextField.OnTextBoxTextChanged(System.Object,System.Windows.Controls.TextChangedEventArgs)">
            <summary>
            Handles the case where the text box's text changed.
            </summary>
            <param name="sender">The text box.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="T:System.Windows.Controls.DataFormValueConverter">
            <summary>
            Value converter for the DataForm.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.DataFormValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts forwards.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">The target type.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataFormValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts backwards.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">The target type.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="T:System.Windows.Controls.PathOrderPair">
            <summary>
            Wrapper class used to sort paths based on the order derived from a DisplayAttribute.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.PathOrderPair.GetOrder(System.Windows.Controls.PathOrderPair)">
            <summary>
            Gets the order from a PathOrderPair.
            </summary>
            <param name="pathOrderPair">The PathOrderPair.</param>
            <returns>The order from the PathOrderPair.</returns>
        </member>
        <member name="P:System.Windows.Controls.PathOrderPair.Path">
            <summary>
            Gets or sets the path.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PathOrderPair.Order">
            <summary>
            Gets or sets the order.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ValidationUtil">
            <summary>
            Utility class that contains static methods for DataForm validation purposes.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.CopyBinding(System.Windows.Data.Binding)">
            <summary>
            Creates a new Binding that is a shallow copy of the source Binding.
            </summary>
            <param name="source">The Binding to copy.</param>
            <returns>The copied Binding.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.ElementHasErrors(System.Windows.DependencyObject)">
            <summary>
            Returns whether or not a DependencyObject has errors.
            </summary>
            <param name="element">The element to test.</param>
            <returns>Whether or not it has errors.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.GetBindingExpressionsForElement(System.Windows.FrameworkElement)">
            <summary>
            Gets the list of binding expressions for the given element.
            </summary>
            <param name="element">The element.</param>
            <returns>The list of binding expressions.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.GetDependencyPropertiesForElement(System.Windows.FrameworkElement)">
            <summary>
            Gets the list of dependency properties for the given element.
            </summary>
            <param name="element">The element.</param>
            <returns>The list of dependency properties.</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationUtil.UpdateSourceOnElementBindings(System.Windows.FrameworkElement)">
            <summary>
            Updates the source on the bindings for a given element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="T:System.Windows.Controls.DataPager">
            <summary>
            Handles paging for an IPagedCollectionView.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.DataPager.AutoEllipsisProperty">
            <summary>
            Identifies the AutoEllipsis dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.CanChangePageProperty">
            <summary>
            Identifies the CanChangePage dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.CanMoveToFirstPageProperty">
            <summary>
            Identifies the CanMoveToFirstPage dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.CanMoveToLastPageProperty">
            <summary>
            Identifies the CanMoveToLastPage dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.CanMoveToNextPageProperty">
            <summary>
            Identifies the CanMoveToNextPage dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.CanMoveToPreviousPageProperty">
            <summary>
            Identifies the CanMoveToPreviousPage dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.DisplayModeProperty">
            <summary>
            Identifies the DisplayMode dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.IsTotalItemCountFixedProperty">
            <summary>
            Identifies the IsTotalItemCountFixed dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.ItemCountProperty">
            <summary>
            Identifies the ItemCount dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.NumericButtonCountProperty">
            <summary>
            Identifies the NumericButtonCount dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.NumericButtonStyleProperty">
            <summary>
            Identifies the NumericButtonStyle dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.PageCountProperty">
            <summary>
            Identifies the PageCount dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.PageIndexProperty">
            <summary>
            Identifies the PageIndex dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.PageSizeProperty">
            <summary>
            Identifies the PageSize dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager.SourceProperty">
            <summary>
            Identifies the Source dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._currentPageTextBox">
            <summary>
            Private accessor for the current page text box.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._firstPageButtonBase">
            <summary>
            Private accessor for the first page ButtonBase.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._lastPageButtonBase">
            <summary>
            Private accessor for the last page ButtonBase.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._nextPageButtonBase">
            <summary>
            Private accessor for the next page ButtonBase.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._numericButtonPanel">
            <summary>
            Private accessor for the panel hosting the buttons.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._previousPageButtonBase">
            <summary>
            Private accessor for the previous page ButtonBase.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._requestedPageIndex">
            <summary>
            The new index of the current page, used to change the
            current page when a user enters something into the
            current page text box.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._selectedButton">
            <summary>
            Private accessor for the selected button.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DataPager._totalPagesTextBlock">
            <summary>
            Private accessor for the total pages text block.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.#ctor">
            <summary>
            Initializes a new instance of the DataPager class.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnApplyTemplate">
            <summary>
            Applies the control's template, retrieves the elements
            within it, and sets up events.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnAutoEllipsisPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            AutoEllipsis property changed handler.
            </summary>
            <param name="d">NumericButton that changed its AutoEllipsis.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnDisplayModePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            DisplayMode property changed handler.
            </summary>
            <param name="d">DataPager that changed its DisplayMode.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnIsTotalItemCountFixedPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsTotalItemCountFixed property changed handler.
            </summary>
            <param name="d">DataPager that changed IsTotalItemCountFixed.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnNumericButtonCountPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            NumericButtonCount property changed handler.
            </summary>
            <param name="d">DataPager that changed its NumericButtonCount.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnNumericButtonStylePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            NumericButtonStyle property changed handler.
            </summary>
            <param name="d">DataPager that changed its NumericButtonStyle.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnPageIndexPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PageIndex property changed handler.
            </summary>
            <param name="d">DataPager that changed its PageIndex.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnPageSizePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            PageSize property changed handler.
            </summary>
            <param name="d">DataPager that changed its PageSize.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnReadOnlyPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when a Read-Only dependency property is changed
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            SourceProperty property changed handler.
            </summary>
            <param name="d">DataPager that changed its Source.</param>
            <param name="e">The DependencyPropertyChangedEventArgs for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.GetButtonStartIndex">
            <summary>
            Gets the starting index that our buttons should be labeled with.
            </summary>
            <returns>Starting index for our buttons</returns>
        </member>
        <member name="M:System.Windows.Controls.DataPager.MoveCurrentPageToTextboxValue">
            <summary>
            Attempts to move the current page index to the value
            in the current page textbox.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.MoveToRequestedPage">
            <summary>
            Given the new value of _requestedPageIndex, this method will attempt a page move 
            and set the _currentPageIndex variable accordingly.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handler for when the numeric buttons in the pager are clicked
            </summary>
            <param name="sender">Button that fired the event</param>
            <param name="e">EventArgs for the event</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnCurrentPageTextBoxKeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            Handles the KeyDown event on the current page text box.
            </summary>
            <param name="sender">The object firing this event.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnCurrentPageTextBoxLostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the loss of focus for the current page text box.
            </summary>
            <param name="sender">The object firing this event.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnFirstPageButtonBaseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the first page ButtonBase.
            </summary>
            <param name="sender">The object firing this event.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnLastPageButtonBaseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the last page ButtonBase.
            </summary>
            <param name="sender">The object firing this event.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnNextPageButtonBaseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the next page ButtonBase.
            </summary>
            <param name="sender">The object firing this event.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnPreviousPageButtonBaseClick(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the click of the previous page ButtonBase.
            </summary>
            <param name="sender">The object firing this event.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.OnSourcePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles a property change within the IPagedCollectionView.
            </summary>
            <param name="sender">The object firing this event.</param>
            <param name="e">The event args for this event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.RaisePageIndexChanged">
            <summary>
            Raises the PageIndexChanged event.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.RaisePageIndexChanging(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the PageIndexChanging event.
            </summary>
            <param name="e">The event args to use for the event.</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.SetCannotChangePage(System.Boolean)">
            <summary>
            Update DataPager UI for paging enabled.
            </summary>
            <param name="needPage">Boolean that specifies if a page is needed</param>
        </member>
        <member name="M:System.Windows.Controls.DataPager.SetCanChangePage">
            <summary>
            Update DataPager UI for paging disabled.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.TryParseTextBoxPage">
            <summary>
            Attempts to put the integer value of the string in _currentPageTextBox into _requestedPageIndex.
            </summary>
            <returns>Whether or not the parsing of the string succeeded.</returns>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdateButtonCount">
            <summary>
            Updates the visual display of the number of buttons that we display.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdateButtonDisplay">
            <summary>
            Updates the visual content and style of the buttons that we display.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdateControl">
            <summary>
            Updates the current page, the total pages, and the
            state of the control.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdateCanPageFirstAndPrevious">
            <summary>
            Updates the states of whether the pager can page to the first
            and to the previous page.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdateCanPageNextAndLast">
            <summary>
            Updates the states of whether the pager can page to the next
            and to the last page.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdatePageModeDisplay">
            <summary>
            Updates the visual display to show the current page mode
            we have selected.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DataPager.UpdatePageCount">
            <summary>
            Updates the page count based on the number of items and the page size.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataPager.PageIndexChanging">
            <summary>
            EventHandler for when PageIndex is changing.
            </summary>
        </member>
        <member name="E:System.Windows.Controls.DataPager.PageIndexChanged">
            <summary>
            EventHandler for when PageIndex has changed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.AutoEllipsis">
            <summary>
            Gets or sets a value indicating whether or not to use an ellipsis as the last button.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.CanChangePage">
            <summary>
            Gets a value indicating whether or not the user is allowed to move to another page
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.CanMoveToFirstPage">
            <summary>
            Gets a value indicating whether or not the DataPager will allow the user to attempt to move to the first page if CanChangePage is true.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.CanMoveToLastPage">
            <summary>
            Gets a value indicating whether or not the DataPager will allow the user to attempt to move to the last page if CanChangePage is true.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.CanMoveToNextPage">
            <summary>
            Gets a value indicating whether or not the DataPager will allow the user to attempt to move to the next page if CanChangePage is true.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.CanMoveToPreviousPage">
            <summary>
            Gets a value indicating whether or not the DataPager will allow the user to attempt to move to the previous page if CanChangePage is true.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.DisplayMode">
            <summary>
            Gets or sets the DisplayMode, which determines the UI that is displayed
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.IsTotalItemCountFixed">
            <summary>
            Gets or sets a value indicating whether or not the total number of items in the collection is fixed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.ItemCount">
            <summary>
            Gets the current number of known items in the IPagedCollectionView.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.Source">
            <summary>
            Gets or sets the IPagedCollectionView.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.NumericButtonCount">
            <summary>
            Gets or sets the NumericButtonCount, which determines the number of page
            buttons shown on the DataPager
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.NumericButtonStyle">
            <summary>
            Gets or sets the style that will be used for the Numeric Buttons.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.PageCount">
            <summary>
            Gets the current number of known pages in the IPagedCollectionView.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.PageIndex">
            <summary>
            Gets or sets the current PageIndex in the IPagedCollectionView.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DataPager.PageSize">
            <summary>
            Gets or sets the current PageSize in the IPagedCollectionView.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.PagerDisplayMode">
            <summary>
            PagerDisplayMode Enum
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.PagerDisplayMode.FirstLastNumeric">
            <summary>
            Shows the First and Last buttons + the numeric display
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PagerDisplayMode.FirstLastPreviousNext">
            <summary>
            Shows the First, Last, Previous, Next buttons
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PagerDisplayMode.FirstLastPreviousNextNumeric">
            <summary>
            Shows the First, Last, Previous, Next buttons + the numeric display
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PagerDisplayMode.Numeric">
            <summary>
            Shows the numeric display
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PagerDisplayMode.PreviousNext">
            <summary>
            Shows the Previous and Next buttons
            </summary>
        </member>
        <member name="F:System.Windows.Controls.PagerDisplayMode.PreviousNextNumeric">
            <summary>
            Shows the Previous and Next buttons + the numeric display
            </summary>
        </member>
        <member name="T:System.Windows.Controls.PagerResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.AutoEllipsisString">
            <summary>
              Looks up a localized string similar to ....
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.InvalidButtonPanelContent">
            <summary>
              Looks up a localized string similar to The NumericButtonPanel contains invalid children..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.InvalidTimeSpan">
            <summary>
              Looks up a localized string similar to The {0} time span must be strictly positive..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.PageIndexMustBeNegativeOne">
            <summary>
              Looks up a localized string similar to The PageIndex property can only be set to -1 when the Source property is null or the PageSize property is 0..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.UnderlyingPropertyIsReadOnly">
            <summary>
              Looks up a localized string similar to {0} cannot be set because the underlying property is read only..
            </summary>
        </member>
        <member name="P:System.Windows.Controls.PagerResources.ValueMustBeGreaterThanOrEqualTo">
            <summary>
              Looks up a localized string similar to {0} must be greater than or equal to {1}..
            </summary>
        </member>
        <member name="T:System.Windows.Controls.Data.DataForm.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Resources.ErrorSummaryHeaderError">
            <summary>
              Looks up a localized string similar to 1 Error.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Resources.ErrorSummaryHeaderErrors">
            <summary>
              Looks up a localized string similar to {0} Errors.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.Data.DataForm.Resources.UnderlyingPropertyIsReadOnly">
            <summary>
              Looks up a localized string similar to {0} cannot be set because the underlying property is ReadOnly..
            </summary>
        </member>
        <member name="T:System.Windows.Controls.DescriptionViewer">
            <summary>
            A DescriptionViewer displays caption and required field
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="T:System.Windows.Controls.AssociatedControl">
            <summary>
            AssociatedControl is a base class for controls that load metadata and error state information from an input control
            and its associated BindingExpression.  Metadata driven controls pull caption, required state details, validation errors, 
            and descriptions from the source entity objects so that they can be written once (as attributes) and used throughout 
            the application.  
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.AssociatedControl.VSMGROUP_ValidationStates">
            <summary>
            VSM Group for validation, containing focus details.  These details are not orthogonal and thus were combined.   See TextBox validation for precedence.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AssociatedControl.VSMSTATE_ValidFocused">
            <summary>
            VSM State for Valid and Focused
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AssociatedControl.VSMSTATE_ValidUnfocused">
            <summary>
            VSM State for Valid and Unfocused
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AssociatedControl.VSMSTATE_InvalidFocused">
            <summary>
            VSM State for Invalid and Focused
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AssociatedControl.VSMSTATE_InvalidUnfocused">
            <summary>
            VSM State for Invalid and Focused
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.#ctor">
            <summary>
            Initializes a new instance of the AssociatedControl class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AssociatedControl.ValidationMetadataProperty">
            <summary>
            Gets or sets the ValidationMetadata, which represents all of the metadata associated with the binding path of the input control.  This includes
            IsFieldRequired, RequiredFieldMessage, Caption, and Description.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.GetValidationMetadata(System.Windows.DependencyObject)">
            <summary>
            Gets the ValidationMetadata property for the inputcontrol
            </summary>
            <param name="inputControl">The input control to get the ValidationMetadata property from.</param>
            <returns>The ValidationMetadata associated with the input control.</returns>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.SetValidationMetadata(System.Windows.DependencyObject,System.Windows.Controls.ValidationMetadata)">
            <summary>
            Sets the ValidationMetadata property for the inputcontrol
            </summary>
            <param name="inputControl">The input control to set the ValidationMetadata property on.</param>
            <param name="value">The ValidationMetadata to associate with the input control.</param>
        </member>
        <member name="F:System.Windows.Controls.AssociatedControl.DataContextProperty">
            <summary>
            Identifies the DataContext dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AssociatedControl.IsFocusedProperty">
            <summary>
            Identifies the IsFocused dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AssociatedControl.IsValidProperty">
            <summary>
            Identifies the IsValid dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AssociatedControl.PropertyPathProperty">
            <summary>
            Identifies the PropertyPath dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.AssociatedControl.TargetProperty">
            <summary>
            Identifies the Target dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.ParseMetadata(System.Windows.FrameworkElement,System.Boolean,System.Object@,System.Windows.Data.BindingExpression@)">
            <summary>
            Parse metadata from a target FrameworkElement.  This will cache the metadata on the element as an attached property.
            </summary>
            <param name="element">The target FrameworkElement to pull metadata from.</param>
            <param name="forceUpdate">If set, will not pull metadata from cache.</param>
            <param name="entity">The entity used.</param>
            <param name="bindingExpression">The bindingExpression used.</param>
            <returns>Returns the metadata associated with the element.  Will be null if no metadata was found.</returns>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.ParseMetadata(System.String,System.Object)">
            <summary>
            Parse metadata given a bindingPath and entity object.
            </summary>
            <param name="bindingPath">The bindingPath is the name of the property on the entity from which to pull metadata from.  This supports dot notation.</param>
            <param name="entity">The entity object from which to pull metadata from.</param>
            <returns>The validation metadata associated with the entity and bindingpath.  This will return null if none exists.</returns>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.GetProperty(System.Type,System.String)">
            <summary>
            Get the PropertyInfo for a given entity type.  Supports dot notation to represent nested objects.
            </summary>
            <param name="entityType">The type of the object.</param>
            <param name="propertyPath">The property path, supporting dot notation.</param>
            <returns>The PropertyInfo corresponding to the final property.</returns>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.OnApplyTemplate">
            <summary>
            Update VSM states when the template is set
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.Refresh">
            <summary>
            Reload the metadata from the source target or DataContext, and update the VSM states.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.OnMetadataLoaded">
            <summary>
            This method is triggered when the metadata is loaded.  Deriving classes can override this to make sure of updated metadata.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.OnTargetFocusedChanged">
            <summary>
            Triggered when the target focus has changed
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.OnTargetLoaded(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            This method is called whenever the target is loaded.  Deriving classes should override this method to perform
            actions based on the target.
            </summary>
            <param name="oldTarget">The target FrameworkElement being replaced.</param>
            <param name="newTarget">The target FrameworkElement being added.</param>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.UpdateValidationState">
            <summary>
            Update the validation VSM state
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.AssociatedControl_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Perform initialization code
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.LoadMetadata(System.Boolean)">
            <summary>
            Load meta data and update the UI. 
            </summary>
            <param name="forceUpdate">If true, metadata will not be loaded from cache.</param>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.ParseTargetValidState">
            <summary>
            Parse the target error state and update the IsValid property
            </summary>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.Target_BindingValidationError(System.Object,System.Windows.Controls.ValidationErrorEventArgs)">
            <summary>
            Event handler for target control's BindingValidationError event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.Target_GotFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event handler for the target control's GotFocus event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Controls.AssociatedControl.Target_LostFocus(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Event handler for the target control's LostFocus event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:System.Windows.Controls.AssociatedControl.IsFocused">
            <summary>
            Gets or sets a value indicating whether the AssociatedControl's target is currently being focused.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AssociatedControl.IsValid">
            <summary>
            Gets or sets a value indicating whether the AssociatedControl has errors.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AssociatedControl.PropertyPath">
            <summary>
            Gets or sets the property path
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AssociatedControl.Target">
            <summary>
            Gets or sets the targeted FrameworkElement from which to pull metadata.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AssociatedControl.IsValidInternal">
            <summary>
            Test accessor for IsValid
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AssociatedControl.ValidationMetadata">
            <summary>
            Internally get or set the ValidationMetadata.  
            </summary>
        </member>
        <member name="P:System.Windows.Controls.AssociatedControl.Initialized">
            <summary>
            Gets a value indicating whether the control has been initialized.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.#ctor">
            <summary>
            Initializes a new instance of the DescriptionViewer class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DescriptionViewer.DescriptionProperty">
            <summary>
            Identifies the Description dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.OnDescriptionPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle the Description field property change event.  This will update the the VSM state.
            </summary>
            <param name="depObj"></param>
            <param name="e"></param>
        </member>
        <member name="F:System.Windows.Controls.DescriptionViewer.GlyphTemplateProperty">
            <summary>
            Identifies the GlyphTemplate dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.DescriptionViewer.ToolTipStyleProperty">
            <summary>
            Identifies the ToolTipStyle dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.OnApplyTemplate">
            <summary>
            When the template is applied, this loads all the template parts
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.Refresh">
            <summary>
            Reload the metadata from the source target or DomainContext
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.OnMetadataLoaded">
            <summary>
            This method is called whenever the metadata is loaded.  When loaded, the description field is set.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.UpdateValidationState">
            <summary>
            When updating the validation state, check the focus state and update the VSM accordingly
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.DescriptionViewer_IsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsEnabled property change handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.UpdateCommonState">
            <summary>
            Update the Common VSM state
            </summary>
        </member>
        <member name="M:System.Windows.Controls.DescriptionViewer.UpdateDescriptionState">
            <summary>
            Update the required field VSM state based on the description property.  
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DescriptionViewer.Description">
            <summary>
            Gets or sets the description text of the property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DescriptionViewer.GlyphTemplate">
            <summary>
            Gets or sets the GlyphTemplate.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.DescriptionViewer.ToolTipStyle">
            <summary>
            Gets or sets the ToolTipStyle.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ErrorSummaryItemEventArgs">
            <summary>
            Provides data for the ErrorClicked event.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.ErrorSummaryItemEventArgs.#ctor(System.Windows.Controls.ErrorSummaryItem)">
            <summary>
            Initializes a new instance of the ErrorSummaryItemEventArgs class.
            </summary>
            <param name="error">The ErrorSummaryItem reference</param>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummaryItemEventArgs.ErrorSummaryItem">
            <summary>
            Gets the error message string
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ErrorSummaryItem">
            <summary>
            ErrorSummaryItem encapsulates validation errors.  It keeps track of the error itself, what control it's associated with, and the associated field.
            This class is immutable.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.ErrorSummaryItem.#ctor(System.String,System.Windows.Controls.ErrorType)">
            <summary>
            Initializes a new instance of the ErrorSummaryItem class.
            </summary>
            <param name="errorMessage">error message text</param>
            <param name="errorType">Whether the error originated from an entity or property</param>
        </member>
        <member name="M:System.Windows.Controls.ErrorSummaryItem.#ctor(System.String,System.Windows.Controls.ErrorType,System.Object,System.Windows.FrameworkElement,System.String)">
            <summary>
            Initializes a new instance of the ErrorInfo class.  This overload can designate the ErrorSource.
            </summary>
            <param name="errorMessage">error message text</param>
            <param name="errorType">Whether the error originated from an entity or property</param>
            <param name="context">Context from which the error occured.  This general property can be used as a container to keep track of the entity, for instance.</param>
            <param name="control">input control resulting in this error</param>
            <param name="propertyName">The name of the property associated with the error.</param>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummaryItem.ErrorMessage">
            <summary>
            Gets the error message text
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummaryItem.ErrorType">
            <summary>
            Gets the ErrorSource, which is the method in which this error was discovered.  Only internal classes can set this field as
            anything but Custom.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummaryItem.Context">
            <summary>
            Gets the name of the field member which resulted in this error
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummaryItem.PropertyName">
            <summary>
            Gets the reference to the input control that resulted in this error
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummaryItem.Control">
            <summary>
            Control reference for the error.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ErrorType">
            <summary>
            The source of the error, for error management
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ErrorType.EntityError">
            <summary>
            The error came from entity level validation
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ErrorType.PropertyError">
            <summary>
            The error came from the binding engine, which exposes only a single error at a time
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ErrorSummary">
            <summary>
            The ErrorSummary will display validation errors for the given ErrorsSource.  This can  show the entity level 
            errors or the aggregate of all errors from each input control or both.  There is an Errors collection that 
            represents all errors added to the ErrorSummary and the FilteredErrors list that contains all the errors
            matching the display filter.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.ErrorSummary.#ctor">
            <summary>
            Initializes a new instance of the ErrorSummary class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ErrorSummary.ShowErrorsInSummaryProperty">
            <summary>
            Gets or sets a value indicating whether the field errors belonging to the input control should be shown in the ErrorSummary. 
            Errors are added to the FilteredErrors list depending on this flag.  The base Errors list, however, will always contain all
            the errors.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ErrorSummary.GetShowErrorsInSummary(System.Windows.DependencyObject)">
            <summary>
            Gets the ShowErrorsInSummary property of the specified DependencyObject.
            </summary>
            <param name="inputControl">The input control to get the ShowErrorsInSummary property from.</param>
            <returns>The value indicating whether errors on the input control should be shown.</returns>
        </member>
        <member name="M:System.Windows.Controls.ErrorSummary.SetShowErrorsInSummary(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the ShowErrorsInSummary property of the specified DependencyObject.
            </summary>
            <param name="inputControl">The input control with which to associate the specified dependency property.</param>
            <param name="value">The value indicating whether errors on the input control should be shown.</param>
        </member>
        <member name="F:System.Windows.Controls.ErrorSummary.ErrorsListBoxStyleProperty">
            <summary>
            Identifies the ErrorsPanel dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ErrorSummary.ErrorsSourceProperty">
            <summary>
            Identifies the ErrorsSource dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ErrorSummary.ErrorStyleProperty">
            <summary>
            Identifies the ErrorStyle dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ErrorSummary.FilterProperty">
            <summary>
            Identifies the Filter dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ErrorSummary.FocusControlsOnClickProperty">
            <summary>
            Identifies the FocusControlsOnClick dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ErrorSummary.HasErrorsProperty">
            <summary>
            Identifies the HasErrors dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ErrorSummary.HeaderProperty">
            <summary>
            Identifies the Header dependency property
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ErrorSummary.HeaderTemplateProperty">
            <summary>
            Identifies the HeaderTemplate dependency property
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ErrorSummary.CompareErrorSummaryItems(System.Windows.Controls.ErrorSummaryItem,System.Windows.Controls.ErrorSummaryItem)">
            <summary>
            Compare ErrorSummaryItems for display in the ErrorSummary
            </summary>
            <param name="x">The first reference used for comparison.</param>
            <param name="y">The second reference used for comparison.</param>
            <returns>The result of the comparison check between the two references.</returns>
        </member>
        <member name="M:System.Windows.Controls.ErrorSummary.TryCompareReferences(System.Object,System.Object,System.Int32@)">
            <summary>
            Try to compare two references, but only if they they are comparable
            </summary>
            <param name="x">The first reference to compare.</param>
            <param name="y">The second reference to compare.</param>
            <param name="returnVal">The comparison value.</param>
            <returns>Returns true if the two references were able to be compared.</returns>
        </member>
        <member name="M:System.Windows.Controls.ErrorSummary.ReferencesAreValid(System.Object,System.Object,System.Int32@)">
            <summary>
            Perform a null comparison check if one (or both) are null
            </summary>
            <param name="x">The first reference to compare.</param>
            <param name="y">The second reference to compare.</param>
            <param name="val">The comparison value.</param>
            <returns>Returns true if both references are non-null</returns>
        </member>
        <member name="M:System.Windows.Controls.ErrorSummary.UpdateFilteredErrorsOnAllErrorSummaries(System.Windows.DependencyObject)">
            <summary>
            When one of the input controls has its ShowErrorsInSummary property changed, we have to go through all the ErrorSummaries on the page and update them
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:System.Windows.Controls.ErrorSummary.OnApplyTemplate">
            <summary>
            When the template is applied, this loads all the template parts
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ErrorSummary.OnErrorClicked(System.Windows.Controls.ErrorSummaryItemEventArgs)">
            <summary>
            OnErrorClicked is invoked when an error in the ErrorSummary is clicked, via either the mouse or keyboard.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Controls.ErrorSummary.ExecuteClickInternal">
            <summary>
            Simulate a click
            </summary>
        </member>
        <member name="E:System.Windows.Controls.ErrorSummary.ErrorClicked">
            <summary>
            Event triggered when an Error is clicked on.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummary.ErrorsListBoxStyle">
            <summary>
            Gets or sets the ItemsPanel for the Errors ListBox.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummary.ErrorsSource">
            <summary>
            Gets or sets the source of errors for the ErrorSummary.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummary.ErrorStyle">
            <summary>
            Gets or sets the style for the Error itemcontainer.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummary.Filter">
            <summary>
            Gets or sets the Filter property to indicate which types of errors should be displayed.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummary.FocusControlsOnClick">
            <summary>
            Gets or sets a value indicating whether focus should be set on the inputcontrol when clicked
            when clicked on it
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummary.HasErrors">
            <summary>
            Gets or sets a value indicating whether the ErrorSummary has errors.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummary.Header">
            <summary>
            Gets or sets the Header
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummary.HeaderTemplate">
            <summary>
            Gets or sets the Header DataTemplate
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummary.Errors">
            <summary>
            Gets the collection of errors
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummary.FilteredErrors">
            <summary>
            Gets the filtered list of errors that are shown.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummary.Initialized">
            <summary>
            Gets a value indicating whether the ErrorSummary is initialized.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummary.ErrorsListBoxInternal">
            <summary>
            Gets the ErrorsListBox template part
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ErrorSummary.HeaderContentControlInternal">
            <summary>
            Gets the HeaderContentControl template part
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ErrorSummaryFilters">
            <summary>
            An enum to specify the error filtering level.
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="F:System.Windows.Controls.ErrorSummaryFilters.None">
            <summary>
            None of the errors are displayed in the ErrorSummary
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ErrorSummaryFilters.EntityErrors">
            <summary>
            ErrorSummary only displays the Entity level errors
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ErrorSummaryFilters.PropertyErrors">
            <summary>
            ErrorSummary only displays the property level errors
            </summary>
        </member>
        <member name="F:System.Windows.Controls.ErrorSummaryFilters.All">
            <summary>
            ErrorSummary displays all errors
            </summary>
        </member>
        <member name="T:System.Windows.Controls.FieldLabel">
            <summary>
            A FieldLabel displays caption and required field
            </summary>
            <QualityBand>Preview</QualityBand>
        </member>
        <member name="M:System.Windows.Controls.FieldLabel.#ctor">
            <summary>
            Initializes a new instance of the FieldLabel class.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.FieldLabel.ContentProperty">
            <summary>
            Identifies the Content dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.FieldLabel.ContentTemplateProperty">
            <summary>
            Identifies the ContentTemplate dependency property.
            </summary>
        </member>
        <member name="F:System.Windows.Controls.FieldLabel.IsRequiredProperty">
            <summary>
            Identifies the IsRequired dependency property.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.FieldLabel.OnIsRequiredPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handle the IsRequired field property change event.
            </summary>
            <param name="depObj"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Controls.FieldLabel.OnApplyTemplate">
            <summary>
            When the template is applied, this loads all the template parts
            </summary>
        </member>
        <member name="M:System.Windows.Controls.FieldLabel.Refresh">
            <summary>
            Reload the metadata from the source target or DomainContext
            </summary>
        </member>
        <member name="M:System.Windows.Controls.FieldLabel.OnMetadataLoaded">
            <summary>
            This method is called whenever the metadata is loaded.  When loaded, the caption and IsRequired fields are
            parsed and used to update the FieldLabel Content and IsRequired properties.
            </summary>
        </member>
        <member name="M:System.Windows.Controls.FieldLabel.FieldLabel_IsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            IsEnabled property change handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:System.Windows.Controls.FieldLabel.UpdateCommonState">
            <summary>
            Update the Common VSM state
            </summary>
        </member>
        <member name="M:System.Windows.Controls.FieldLabel.UpdateRequiredState">
            <summary>
            Update the required field VSM state based on the IsRequired property.  
            </summary>
        </member>
        <member name="P:System.Windows.Controls.FieldLabel.Content">
            <summary>
            Gets or sets the Content of the FieldLabel.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.FieldLabel.ContentTemplate">
            <summary>
            Gets or sets the ContentTemplate of the FieldLabel.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.FieldLabel.IsRequired">
            <summary>
            Gets or sets a value indicating whether the field is required.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ValidationErrorCollection">
            <summary>
            Represents all of the errors associated with a given input control
            </summary>
        </member>
        <member name="M:System.Windows.Controls.ValidationErrorCollection.FindError(System.Windows.Controls.ErrorType,System.String,System.Windows.FrameworkElement)">
            <summary>
            Find an error with the given error message
            </summary>
            <param name="errorType">The source of the error</param>
            <param name="message">The message string to search for</param>
            <param name="control">The reference to the control associated with the error.</param>
            <returns>The found ErrorInfo</returns>
        </member>
        <member name="M:System.Windows.Controls.ValidationErrorCollection.ClearErrors(System.Windows.Controls.ErrorType)">
            <summary>
            Clears errors of the given source type
            </summary>
            <param name="errorType">The type of the error (Entity or Property)</param>
        </member>
        <member name="M:System.Windows.Controls.ValidationErrorCollection.ClearItems">
            <summary>
            Clears all the ErrorInfo from the collection.
            </summary>
        </member>
        <member name="T:System.Windows.Controls.ValidationMetadata">
            <summary>
            Encapsulates metadata info for a given property.
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationMetadata.IsRequired">
            <summary>
            Gets or sets a value indicating whether the field is required
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationMetadata.RequiredFieldMessage">
            <summary>
            Gets or sets the required field message
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationMetadata.Description">
            <summary>
            Gets or sets the property description
            </summary>
        </member>
        <member name="P:System.Windows.Controls.ValidationMetadata.Caption">
            <summary>
            Gets or sets the caption
            </summary>
        </member>
        <member name="E:System.Windows.Controls.ValidationMetadata.PropertyChanged">
            <summary>
            This event is raised when any of the properties on the object change
            </summary>
        </member>
    </members>
</doc>
